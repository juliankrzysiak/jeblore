---
import Card from 'src/components/Card.astro';
import { getComics } from 'src/helper';
import Layout from 'src/layouts/Layout.astro';

const ascComics = await getComics('asc');
const descComics = await getComics('desc');
---

<Layout title='comics'>
	<main>
		<select id='sortOrder'>
			<option value='desc'>Newest to Oldest</option>
			<option value='asc'>Oldest to Newest</option>
		</select>
		<ol class='desc'>
			{
				descComics.map((comic) => {
					return (
						<Card
							title={comic.data.title}
							url={'comics/' + comic.id}
							img={comic.data.image}
							alt={comic.data.imageAlt}
						/>
					);
				})
			}
		</ol>
		<ol class='asc hidden'>
			{
				ascComics.map((comic) => {
					return (
						<Card
							title={comic.data.title}
							url={'comics/' + comic.id}
							img={comic.data.image}
							alt={comic.data.imageAlt}
						/>
					);
				})
			}
		</ol>
	</main>
</Layout>

<script>
	document.addEventListener('astro:page-load', () => {
		const ascComics = document.querySelector('.asc');
		const descComics = document.querySelector('.desc');
		const sortOrder = document.querySelector('#sortOrder');
		if (!sortOrder) return;
		sortOrder.addEventListener('change', () => {
			ascComics?.classList.toggle('hidden');
			descComics?.classList.toggle('hidden');
		});
	});
</script>

<style>
	main {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
		align-items: center;
	}

	select {
		padding: 0.1rem 0;
	}

	ol {
		display: flex;
		justify-content: center;
		flex-wrap: wrap;
		gap: 2rem;
		padding: 0 2rem;
	}

	.hidden {
		display: none;
	}
</style>
